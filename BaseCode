-- Game State
GAME_STARTED = false
CURRENT_PHASE = "SETUP"  -- SETUP, PRE_DUEL, DUEL, POKER
CURRENT_ROUND = "NONE"   -- NONE, FLOP, TURN, RIVER
POT = 0

-- Button GUIDs
BUTTONS = {
    START_GAME = "13ae57",
    DEAL_FLOP = "20a46c",
    TURN = "62919d",
    RIVER = "d014a6",
    POKER = "2c87f0",
    RESET = "c086ed"
}

-- Player tracking
HP_COUNTERS = {
    White = "1a068a",
    Red = "cce742",
    Yellow = "b3f6cc",
    Blue = "5f6e12",
    Pink = "5e278b"
}

players = {}

-- Function to get snap point by tag
function getSnapPointByTag(tag)
    local snapPoints = Global.getSnapPoints()
    for _, point in ipairs(snapPoints) do
        if point.tags and #point.tags > 0 then
            for _, snapTag in ipairs(point.tags) do
                if snapTag == tag then
                    return point.position
                end
            end
        end
    end
    return nil
end

-- Button click handlers (global functions)
function startGameClick(obj, color, alt_click)
    if GAME_STARTED then 
        broadcastToAll("Game is already in progress!")
        return 
    end
    
    GAME_STARTED = true
    CURRENT_PHASE = "PRE_DUEL"
    
    local deck = getObjectFromGUID("f7fce5")
    if deck then
        deck.shuffle()
        Wait.frames(function()
            for i = 1, 5 do
                for playerColor, _ in pairs(HP_COUNTERS) do
                    if players[playerColor] and players[playerColor].isActive then
                        deck.deal(1, playerColor)
                    end
                end
            end
        end, 60)
    end
    
    -- Initialize players
    for playerColor, guid in pairs(HP_COUNTERS) do
        local counter = getObjectFromGUID(guid)
        if counter then
            players[playerColor] = {
                color = playerColor,
                HP = 1000,
                isActive = true,
                shield = 0,
                counter = counter
            }
            counter.setValue(1000)
        end
    end
    
    broadcastToAll("Game Started! Dealing initial hands...")
end

function dealFlopClick(obj, color, alt_click)
    if not GAME_STARTED or CURRENT_PHASE ~= "PRE_DUEL" then
        broadcastToAll("Cannot deal flop yet!")
        return
    end
    
    CURRENT_PHASE = "DUEL"
    CURRENT_ROUND = "FLOP"
    local deck = getObjectFromGUID("f7fce5")
    
    if deck then
        -- Get snap point positions
        local flop1Pos = getSnapPointByTag("Flop 1")
        local flop2Pos = getSnapPointByTag("Flop 2")
        local flop3Pos = getSnapPointByTag("Flop 3")
        
        local flopPositions = {flop1Pos, flop2Pos, flop3Pos}
        local dealtCards = {}
        
        -- Deal cards face down first
        for i = 1, 3 do
            Wait.frames(function()
                if flopPositions[i] then
                    local params = {
                        position = flopPositions[i],
                        rotation = {0, 180, 0}, -- Face down
                        smooth = true,
                        callback_function = function(spawnedCard)
                            dealtCards[i] = spawnedCard
                            -- If this is the last card, schedule the flip
                            if i == 3 then
                                Wait.frames(function()
                                    -- Flip all cards simultaneously
                                    for _, card in ipairs(dealtCards) do
                                    
                                    end
                                end, 60) -- Wait 1 second after last card is dealt
                            end
                        end
                    }
                    deck.takeObject(params)
                else
                    broadcastToAll("Warning: Could not find Flop " .. i .. " snap point!")
                end
            end, i * 30)
        end
    end
    
    broadcastToAll("The Flop has been dealt!")
end

function dealTurnClick(obj, color, alt_click)
    if CURRENT_ROUND ~= "FLOP" then
        broadcastToAll("Cannot deal turn yet!")
        return
    end
    
    CURRENT_ROUND = "TURN"
    local deck = getObjectFromGUID("f7fce5")
    
    if deck then
        local turnPos = getSnapPointByTag("Turn 1")
        if turnPos then
            local params = {
                position = turnPos,
                rotation = {0, 180, 0}, -- Face down
                smooth = true,
                callback_function = function(spawnedCard)
                    -- Flip the card after a delay
                    Wait.frames(function()
                     
                    end, 60) -- Wait 1 second before flipping
                end
            }
            deck.takeObject(params)
        else
            broadcastToAll("Warning: Could not find Turn snap point!")
        end
    end
    
    broadcastToAll("The Turn has been dealt!")
end

function dealRiverClick(obj, color, alt_click)
    if CURRENT_ROUND ~= "TURN" then
        broadcastToAll("Cannot deal river yet!")
        return
    end
    
    CURRENT_ROUND = "RIVER"
    local deck = getObjectFromGUID("f7fce5")
    
    if deck then
        local riverPos = getSnapPointByTag("River 1")
        if riverPos then
            local params = {
                position = riverPos,
                rotation = {0, 180, 0}, -- Face down
                smooth = true,
                callback_function = function(spawnedCard)
                    -- Flip the card after a delay
                    Wait.frames(function()
                    
                    end, 60) -- Wait 1 second before flipping
                end
            }
            deck.takeObject(params)
        else
            broadcastToAll("Warning: Could not find River snap point!")
        end
    end
    
    broadcastToAll("The River has been dealt!")
end

function startPokerClick(obj, color, alt_click)
    if CURRENT_ROUND ~= "RIVER" then
        broadcastToAll("Cannot start poker round yet!")
        return
    end
    
    CURRENT_PHASE = "POKER"
    broadcastToAll("Starting Poker Round!")
    
    -- Determine blinds based on HP
    local playersList = {}
    for color, player in pairs(players) do
        if player.isActive then
            table.insert(playersList, {color = color, HP = player.HP})
        end
    end
    
    table.sort(playersList, function(a, b) return a.HP < b.HP end)
    
    if #playersList >= 2 then
        broadcastToAll(playersList[1].color .. " posts big blind")
        broadcastToAll(playersList[2].color .. " posts small blind")
    end
end

function resetGameClick(obj, color, alt_click)
    GAME_STARTED = false
    CURRENT_PHASE = "SETUP"
    CURRENT_ROUND = "NONE"
    POT = 0
    
    -- Get the deck
    local deck = getObjectFromGUID("f7fce5")
    if deck then
        -- Collect all cards
        for _, obj in ipairs(getAllObjects()) do
            if obj.tag == "Card" and obj.getGUID() ~= "f7fce5" then
                deck.putObject(obj)
            end
        end
        -- Shuffle after collecting cards
        Wait.frames(function()
            deck.shuffle()
        end, 60)
    end
    
    -- Reset players
    for playerColor, guid in pairs(HP_COUNTERS) do
        local counter = getObjectFromGUID(guid)
        if counter then
            players[playerColor] = {
                color = playerColor,
                HP = 1000,
                isActive = true,
                shield = 0,
                counter = counter
            }
            counter.setValue(1000)
        end
    end
    
    broadcastToAll("Game has been reset!")
end

function createButtons()
    -- Start Game Button
    local startButton = getObjectFromGUID(BUTTONS.START_GAME)
    if startButton then
        startButton.createButton({
            click_function = "startGameClick",
            function_owner = Global,
            label = "Start\nGame",
            position = {0,0.1,0},
            width = 1200,
            height = 1200,
            font_size = 200
        })
    end

    -- Deal Flop Button
    local flopButton = getObjectFromGUID(BUTTONS.DEAL_FLOP)
    if flopButton then
        flopButton.createButton({
            click_function = "dealFlopClick",
            function_owner = Global,
            label = "Deal\nFlop",
            position = {0,0.1,0},
            width = 1200,
            height = 1200,
            font_size = 200
        })
    end

    -- Turn Button
    local turnButton = getObjectFromGUID(BUTTONS.TURN)
    if turnButton then
        turnButton.createButton({
            click_function = "dealTurnClick",
            function_owner = Global,
            label = "Deal\nTurn",
            position = {0,0.1,0},
            width = 1200,
            height = 1200,
            font_size = 200
        })
    end

    -- River Button
    local riverButton = getObjectFromGUID(BUTTONS.RIVER)
    if riverButton then
        riverButton.createButton({
            click_function = "dealRiverClick",
            function_owner = Global,
            label = "Deal\nRiver",
            position = {0,0.1,0},
            width = 1200,
            height = 1200,
            font_size = 200
        })
    end

    -- Poker Button
    local pokerButton = getObjectFromGUID(BUTTONS.POKER)
    if pokerButton then
        pokerButton.createButton({
            click_function = "startPokerClick",
            function_owner = Global,
            label = "Start\nPoker",
            position = {0,0.1,0},
            width = 1200,
            height = 1200,
            font_size = 200
        })
    end

    -- Reset Button
    local resetButton = getObjectFromGUID(BUTTONS.RESET)
    if resetButton then
        resetButton.createButton({
            click_function = "resetGameClick",
            function_owner = Global,
            label = "Reset\nGame",
            position = {0,0.1,0},
            width = 1200,
            height = 1200,
            font_size = 200
        })
    end
end

function onLoad()
    createButtons()
end

-- Zone handling for cards
function onObjectDrop(color, dropped_object)
    if dropped_object.tag ~= "Card" then return end
    
    local zones = dropped_object.getZones()
    
    for _, zone in ipairs(zones) do
        local zoneGUID = zone.getGUID()
        
        if zoneGUID == "bfaaa6" then  -- Attack zone
            Wait.frames(function()
                applyDamage(color, dropped_object)
                dropped_object.setPositionSmooth({5, 1, 0})
                dropped_object.setRotationSmooth({0, 180, 180})
            end, 30)
            
        elseif zoneGUID == "057984" then  -- Healing zone
            Wait.frames(function()
                applyHealing(color, dropped_object)
                dropped_object.setPositionSmooth({5, 1, 0})
                dropped_object.setRotationSmooth({0, 180, 180})
            end, 30)
        end
    end
end